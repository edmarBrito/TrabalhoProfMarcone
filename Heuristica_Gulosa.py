# -*- coding: utf-8 -*-
"""1c.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OCQyXg1lbToHfy-NJab0y7kf3nKp6Ame

# Implementação via Heurística Gulosa
"""



itens = [
    {'id': 1, 'peso': 6},
    {'id': 2, 'peso': 12},
    {'id': 3, 'peso': 17},
    {'id': 4, 'peso': 8},
    {'id': 5, 'peso': 5},
    {'id': 6, 'peso': 20},
    {'id': 7, 'peso': 8},
    {'id': 8, 'peso': 15},
    {'id': 9, 'peso': 5},
    {'id': 10, 'peso': 18},
    {'id': 11, 'peso': 7},
    {'id': 12, 'peso': 10},
    {'id': 13, 'peso': 15},
    {'id': 14, 'peso': 19},
    {'id': 15, 'peso': 6}
]

conteineres = [
    {'id': 1, 'capacidade': 90},
    {'id': 2, 'capacidade': 100},
    {'id': 3, 'capacidade': 150},
    {'id': 4, 'capacidade': 100},
    {'id': 5, 'capacidade': 70}
] # Capacidades dos contêineres

alocacao = []

itens.sort(key=lambda x: x['peso'], reverse=True)
conteineres.sort(key=lambda x: x['capacidade'], reverse=True)

for item in itens:
    for conteiner in conteineres:
        if conteiner['capacidade'] >= item['peso']:  # Verifica se o item cabe no contêiner
            conteiner['capacidade'] -= item['peso']  # Atualiza a capacidade do contêiner
            alocacao.append({'item': item['id'], 'conteiner': conteiner['id']})  # Adiciona a alocação
            break  # Vai para o próximo item

print("Solução Final (Item -> Contêiner):")
for aloc in alocacao:
    print(f"Item {aloc['item']} alocado ao Contêiner {aloc['conteiner']}")